// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: auth/v1/auth.proto

package authv1

import (
	v11 "ecommerce-grpc-api/gen/go/common/v1"
	v1 "ecommerce-grpc-api/gen/go/user/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AuthError
// This message is used to represent an authentication error.
// It includes a message field to describe the error and a code field to indicate the type of error.
type AuthError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // Error message describing the authentication failure
	Code          int32                  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`      // Error code indicating the type of authentication error
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthError) Reset() {
	*x = AuthError{}
	mi := &file_auth_v1_auth_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthError) ProtoMessage() {}

func (x *AuthError) ProtoReflect() protoreflect.Message {
	mi := &file_auth_v1_auth_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthError.ProtoReflect.Descriptor instead.
func (*AuthError) Descriptor() ([]byte, []int) {
	return file_auth_v1_auth_proto_rawDescGZIP(), []int{0}
}

func (x *AuthError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AuthError) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

// Register user
// This message is used to create a new user in the system.
// It includes fields for username, email, and password.
// The response includes the created user object.
type RegisterUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Email         string                 `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Password      string                 `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterUserRequest) Reset() {
	*x = RegisterUserRequest{}
	mi := &file_auth_v1_auth_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterUserRequest) ProtoMessage() {}

func (x *RegisterUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_v1_auth_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterUserRequest.ProtoReflect.Descriptor instead.
func (*RegisterUserRequest) Descriptor() ([]byte, []int) {
	return file_auth_v1_auth_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterUserRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RegisterUserRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *RegisterUserRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type RegisterUserResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Result:
	//
	//	*RegisterUserResponse_User
	//	*RegisterUserResponse_Error
	Result        isRegisterUserResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterUserResponse) Reset() {
	*x = RegisterUserResponse{}
	mi := &file_auth_v1_auth_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterUserResponse) ProtoMessage() {}

func (x *RegisterUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_v1_auth_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterUserResponse.ProtoReflect.Descriptor instead.
func (*RegisterUserResponse) Descriptor() ([]byte, []int) {
	return file_auth_v1_auth_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterUserResponse) GetResult() isRegisterUserResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *RegisterUserResponse) GetUser() *v1.User {
	if x != nil {
		if x, ok := x.Result.(*RegisterUserResponse_User); ok {
			return x.User
		}
	}
	return nil
}

func (x *RegisterUserResponse) GetError() *AuthError {
	if x != nil {
		if x, ok := x.Result.(*RegisterUserResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isRegisterUserResponse_Result interface {
	isRegisterUserResponse_Result()
}

type RegisterUserResponse_User struct {
	User *v1.User `protobuf:"bytes,1,opt,name=user,proto3,oneof"` // The created user object
}

type RegisterUserResponse_Error struct {
	Error *AuthError `protobuf:"bytes,2,opt,name=error,proto3,oneof"` // Error details if registration fails
}

func (*RegisterUserResponse_User) isRegisterUserResponse_Result() {}

func (*RegisterUserResponse_Error) isRegisterUserResponse_Result() {}

type LoginRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Email         string                 `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	mi := &file_auth_v1_auth_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_v1_auth_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_auth_v1_auth_proto_rawDescGZIP(), []int{3}
}

func (x *LoginRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LoginResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Result:
	//
	//	*LoginResponse_Token
	//	*LoginResponse_Error
	Result        isLoginResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	mi := &file_auth_v1_auth_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_v1_auth_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_auth_v1_auth_proto_rawDescGZIP(), []int{4}
}

func (x *LoginResponse) GetResult() isLoginResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *LoginResponse) GetToken() string {
	if x != nil {
		if x, ok := x.Result.(*LoginResponse_Token); ok {
			return x.Token
		}
	}
	return ""
}

func (x *LoginResponse) GetError() *AuthError {
	if x != nil {
		if x, ok := x.Result.(*LoginResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isLoginResponse_Result interface {
	isLoginResponse_Result()
}

type LoginResponse_Token struct {
	Token string `protobuf:"bytes,1,opt,name=token,proto3,oneof"` // JWT token for authenticated user
}

type LoginResponse_Error struct {
	Error *AuthError `protobuf:"bytes,2,opt,name=error,proto3,oneof"` // Error details if authentication fails
}

func (*LoginResponse_Token) isLoginResponse_Result() {}

func (*LoginResponse_Error) isLoginResponse_Result() {}

type LogoutRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogoutRequest) Reset() {
	*x = LogoutRequest{}
	mi := &file_auth_v1_auth_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutRequest) ProtoMessage() {}

func (x *LogoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_v1_auth_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutRequest.ProtoReflect.Descriptor instead.
func (*LogoutRequest) Descriptor() ([]byte, []int) {
	return file_auth_v1_auth_proto_rawDescGZIP(), []int{5}
}

func (x *LogoutRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type LogoutResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Result:
	//
	//	*LogoutResponse_Message
	//	*LogoutResponse_Error
	Result        isLogoutResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogoutResponse) Reset() {
	*x = LogoutResponse{}
	mi := &file_auth_v1_auth_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutResponse) ProtoMessage() {}

func (x *LogoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_v1_auth_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutResponse.ProtoReflect.Descriptor instead.
func (*LogoutResponse) Descriptor() ([]byte, []int) {
	return file_auth_v1_auth_proto_rawDescGZIP(), []int{6}
}

func (x *LogoutResponse) GetResult() isLogoutResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *LogoutResponse) GetMessage() string {
	if x != nil {
		if x, ok := x.Result.(*LogoutResponse_Message); ok {
			return x.Message
		}
	}
	return ""
}

func (x *LogoutResponse) GetError() *AuthError {
	if x != nil {
		if x, ok := x.Result.(*LogoutResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isLogoutResponse_Result interface {
	isLogoutResponse_Result()
}

type LogoutResponse_Message struct {
	Message string `protobuf:"bytes,1,opt,name=message,proto3,oneof"` // Message indicating the result of the logout operation
}

type LogoutResponse_Error struct {
	Error *AuthError `protobuf:"bytes,2,opt,name=error,proto3,oneof"` // Error details if logout fails
}

func (*LogoutResponse_Message) isLogoutResponse_Result() {}

func (*LogoutResponse_Error) isLogoutResponse_Result() {}

// Update user password
// This message is used to update a user's password.
// It includes the user ID, old password, and new password.
// The response indicates whether the password update was successful.
// It is important to ensure that the old password is correct before allowing the update.
// This helps prevent unauthorized password changes.
// only the user with the correct old password can change to a new password.
type UpdateUserPasswordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *v11.UUID              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OldPassword   string                 `protobuf:"bytes,2,opt,name=old_password,json=oldPassword,proto3" json:"old_password,omitempty"`
	NewPassword   string                 `protobuf:"bytes,3,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserPasswordRequest) Reset() {
	*x = UpdateUserPasswordRequest{}
	mi := &file_auth_v1_auth_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserPasswordRequest) ProtoMessage() {}

func (x *UpdateUserPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_v1_auth_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserPasswordRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserPasswordRequest) Descriptor() ([]byte, []int) {
	return file_auth_v1_auth_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateUserPasswordRequest) GetId() *v11.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *UpdateUserPasswordRequest) GetOldPassword() string {
	if x != nil {
		return x.OldPassword
	}
	return ""
}

func (x *UpdateUserPasswordRequest) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

// UpdateUserPasswordResponse
// This message is used to indicate the success or failure of the password update operation.
// It includes a success flag to indicate whether the password was updated successfully.
type UpdateUserPasswordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // Indicates whether the password update was successful
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserPasswordResponse) Reset() {
	*x = UpdateUserPasswordResponse{}
	mi := &file_auth_v1_auth_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserPasswordResponse) ProtoMessage() {}

func (x *UpdateUserPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_v1_auth_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserPasswordResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserPasswordResponse) Descriptor() ([]byte, []int) {
	return file_auth_v1_auth_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateUserPasswordResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Unregister user
// This message is used to delete a user from the system.
// It includes the user ID in the request and returns a success flag in the response.
type UnregisterUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *v11.UUID              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // ID of the user to be deleted
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnregisterUserRequest) Reset() {
	*x = UnregisterUserRequest{}
	mi := &file_auth_v1_auth_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnregisterUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterUserRequest) ProtoMessage() {}

func (x *UnregisterUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_v1_auth_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterUserRequest.ProtoReflect.Descriptor instead.
func (*UnregisterUserRequest) Descriptor() ([]byte, []int) {
	return file_auth_v1_auth_proto_rawDescGZIP(), []int{9}
}

func (x *UnregisterUserRequest) GetId() *v11.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

type UnregisterUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // Indicates whether the user was successfully deleted
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // Optional message providing additional information about the deletion
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnregisterUserResponse) Reset() {
	*x = UnregisterUserResponse{}
	mi := &file_auth_v1_auth_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnregisterUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterUserResponse) ProtoMessage() {}

func (x *UnregisterUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_v1_auth_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterUserResponse.ProtoReflect.Descriptor instead.
func (*UnregisterUserResponse) Descriptor() ([]byte, []int) {
	return file_auth_v1_auth_proto_rawDescGZIP(), []int{10}
}

func (x *UnregisterUserResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UnregisterUserResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ValidateTokenRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` // The token to be validated
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateTokenRequest) Reset() {
	*x = ValidateTokenRequest{}
	mi := &file_auth_v1_auth_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateTokenRequest) ProtoMessage() {}

func (x *ValidateTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_v1_auth_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateTokenRequest.ProtoReflect.Descriptor instead.
func (*ValidateTokenRequest) Descriptor() ([]byte, []int) {
	return file_auth_v1_auth_proto_rawDescGZIP(), []int{11}
}

func (x *ValidateTokenRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ValidateTokenResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Valid         bool                   `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`                // Indicates whether the token is valid
	UserId        *v11.UUID              `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // The ID of the user associated with the token
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`             // Optional message providing additional information about the validation
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateTokenResponse) Reset() {
	*x = ValidateTokenResponse{}
	mi := &file_auth_v1_auth_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateTokenResponse) ProtoMessage() {}

func (x *ValidateTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_v1_auth_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateTokenResponse.ProtoReflect.Descriptor instead.
func (*ValidateTokenResponse) Descriptor() ([]byte, []int) {
	return file_auth_v1_auth_proto_rawDescGZIP(), []int{12}
}

func (x *ValidateTokenResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *ValidateTokenResponse) GetUserId() *v11.UUID {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *ValidateTokenResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_auth_v1_auth_proto protoreflect.FileDescriptor

const file_auth_v1_auth_proto_rawDesc = "" +
	"\n" +
	"\x12auth/v1/auth.proto\x12\aauth.v1\x1a\x16common/v1/common.proto\x1a\x12user/v1/user.proto\"9\n" +
	"\tAuthError\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x12\n" +
	"\x04code\x18\x02 \x01(\x05R\x04code\"c\n" +
	"\x13RegisterUserRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x14\n" +
	"\x05email\x18\x02 \x01(\tR\x05email\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\"q\n" +
	"\x14RegisterUserResponse\x12#\n" +
	"\x04user\x18\x01 \x01(\v2\r.user.v1.UserH\x00R\x04user\x12*\n" +
	"\x05error\x18\x02 \x01(\v2\x12.auth.v1.AuthErrorH\x00R\x05errorB\b\n" +
	"\x06result\"@\n" +
	"\fLoginRequest\x12\x14\n" +
	"\x05email\x18\x01 \x01(\tR\x05email\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\"]\n" +
	"\rLoginResponse\x12\x16\n" +
	"\x05token\x18\x01 \x01(\tH\x00R\x05token\x12*\n" +
	"\x05error\x18\x02 \x01(\v2\x12.auth.v1.AuthErrorH\x00R\x05errorB\b\n" +
	"\x06result\"%\n" +
	"\rLogoutRequest\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\"b\n" +
	"\x0eLogoutResponse\x12\x1a\n" +
	"\amessage\x18\x01 \x01(\tH\x00R\amessage\x12*\n" +
	"\x05error\x18\x02 \x01(\v2\x12.auth.v1.AuthErrorH\x00R\x05errorB\b\n" +
	"\x06result\"\x82\x01\n" +
	"\x19UpdateUserPasswordRequest\x12\x1f\n" +
	"\x02id\x18\x01 \x01(\v2\x0f.common.v1.UUIDR\x02id\x12!\n" +
	"\fold_password\x18\x02 \x01(\tR\voldPassword\x12!\n" +
	"\fnew_password\x18\x03 \x01(\tR\vnewPassword\"6\n" +
	"\x1aUpdateUserPasswordResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"8\n" +
	"\x15UnregisterUserRequest\x12\x1f\n" +
	"\x02id\x18\x01 \x01(\v2\x0f.common.v1.UUIDR\x02id\"L\n" +
	"\x16UnregisterUserResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\",\n" +
	"\x14ValidateTokenRequest\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\"q\n" +
	"\x15ValidateTokenResponse\x12\x14\n" +
	"\x05valid\x18\x01 \x01(\bR\x05valid\x12(\n" +
	"\auser_id\x18\x02 \x01(\v2\x0f.common.v1.UUIDR\x06userId\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage2\xcf\x03\n" +
	"\vAuthService\x12K\n" +
	"\fRegisterUser\x12\x1c.auth.v1.RegisterUserRequest\x1a\x1d.auth.v1.RegisterUserResponse\x126\n" +
	"\x05Login\x12\x15.auth.v1.LoginRequest\x1a\x16.auth.v1.LoginResponse\x129\n" +
	"\x06Logout\x12\x16.auth.v1.LogoutRequest\x1a\x17.auth.v1.LogoutResponse\x12]\n" +
	"\x12UpdateUserPassword\x12\".auth.v1.UpdateUserPasswordRequest\x1a#.auth.v1.UpdateUserPasswordResponse\x12Q\n" +
	"\x0eUnregisterUser\x12\x1e.auth.v1.UnregisterUserRequest\x1a\x1f.auth.v1.UnregisterUserResponse\x12N\n" +
	"\rValidateToken\x12\x1d.auth.v1.ValidateTokenRequest\x1a\x1e.auth.v1.ValidateTokenResponseB*Z(ecommerce-grpc-api/gen/go/auth/v1;authv1b\x06proto3"

var (
	file_auth_v1_auth_proto_rawDescOnce sync.Once
	file_auth_v1_auth_proto_rawDescData []byte
)

func file_auth_v1_auth_proto_rawDescGZIP() []byte {
	file_auth_v1_auth_proto_rawDescOnce.Do(func() {
		file_auth_v1_auth_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_auth_v1_auth_proto_rawDesc), len(file_auth_v1_auth_proto_rawDesc)))
	})
	return file_auth_v1_auth_proto_rawDescData
}

var file_auth_v1_auth_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_auth_v1_auth_proto_goTypes = []any{
	(*AuthError)(nil),                  // 0: auth.v1.AuthError
	(*RegisterUserRequest)(nil),        // 1: auth.v1.RegisterUserRequest
	(*RegisterUserResponse)(nil),       // 2: auth.v1.RegisterUserResponse
	(*LoginRequest)(nil),               // 3: auth.v1.LoginRequest
	(*LoginResponse)(nil),              // 4: auth.v1.LoginResponse
	(*LogoutRequest)(nil),              // 5: auth.v1.LogoutRequest
	(*LogoutResponse)(nil),             // 6: auth.v1.LogoutResponse
	(*UpdateUserPasswordRequest)(nil),  // 7: auth.v1.UpdateUserPasswordRequest
	(*UpdateUserPasswordResponse)(nil), // 8: auth.v1.UpdateUserPasswordResponse
	(*UnregisterUserRequest)(nil),      // 9: auth.v1.UnregisterUserRequest
	(*UnregisterUserResponse)(nil),     // 10: auth.v1.UnregisterUserResponse
	(*ValidateTokenRequest)(nil),       // 11: auth.v1.ValidateTokenRequest
	(*ValidateTokenResponse)(nil),      // 12: auth.v1.ValidateTokenResponse
	(*v1.User)(nil),                    // 13: user.v1.User
	(*v11.UUID)(nil),                   // 14: common.v1.UUID
}
var file_auth_v1_auth_proto_depIdxs = []int32{
	13, // 0: auth.v1.RegisterUserResponse.user:type_name -> user.v1.User
	0,  // 1: auth.v1.RegisterUserResponse.error:type_name -> auth.v1.AuthError
	0,  // 2: auth.v1.LoginResponse.error:type_name -> auth.v1.AuthError
	0,  // 3: auth.v1.LogoutResponse.error:type_name -> auth.v1.AuthError
	14, // 4: auth.v1.UpdateUserPasswordRequest.id:type_name -> common.v1.UUID
	14, // 5: auth.v1.UnregisterUserRequest.id:type_name -> common.v1.UUID
	14, // 6: auth.v1.ValidateTokenResponse.user_id:type_name -> common.v1.UUID
	1,  // 7: auth.v1.AuthService.RegisterUser:input_type -> auth.v1.RegisterUserRequest
	3,  // 8: auth.v1.AuthService.Login:input_type -> auth.v1.LoginRequest
	5,  // 9: auth.v1.AuthService.Logout:input_type -> auth.v1.LogoutRequest
	7,  // 10: auth.v1.AuthService.UpdateUserPassword:input_type -> auth.v1.UpdateUserPasswordRequest
	9,  // 11: auth.v1.AuthService.UnregisterUser:input_type -> auth.v1.UnregisterUserRequest
	11, // 12: auth.v1.AuthService.ValidateToken:input_type -> auth.v1.ValidateTokenRequest
	2,  // 13: auth.v1.AuthService.RegisterUser:output_type -> auth.v1.RegisterUserResponse
	4,  // 14: auth.v1.AuthService.Login:output_type -> auth.v1.LoginResponse
	6,  // 15: auth.v1.AuthService.Logout:output_type -> auth.v1.LogoutResponse
	8,  // 16: auth.v1.AuthService.UpdateUserPassword:output_type -> auth.v1.UpdateUserPasswordResponse
	10, // 17: auth.v1.AuthService.UnregisterUser:output_type -> auth.v1.UnregisterUserResponse
	12, // 18: auth.v1.AuthService.ValidateToken:output_type -> auth.v1.ValidateTokenResponse
	13, // [13:19] is the sub-list for method output_type
	7,  // [7:13] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_auth_v1_auth_proto_init() }
func file_auth_v1_auth_proto_init() {
	if File_auth_v1_auth_proto != nil {
		return
	}
	file_auth_v1_auth_proto_msgTypes[2].OneofWrappers = []any{
		(*RegisterUserResponse_User)(nil),
		(*RegisterUserResponse_Error)(nil),
	}
	file_auth_v1_auth_proto_msgTypes[4].OneofWrappers = []any{
		(*LoginResponse_Token)(nil),
		(*LoginResponse_Error)(nil),
	}
	file_auth_v1_auth_proto_msgTypes[6].OneofWrappers = []any{
		(*LogoutResponse_Message)(nil),
		(*LogoutResponse_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_auth_v1_auth_proto_rawDesc), len(file_auth_v1_auth_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_auth_v1_auth_proto_goTypes,
		DependencyIndexes: file_auth_v1_auth_proto_depIdxs,
		MessageInfos:      file_auth_v1_auth_proto_msgTypes,
	}.Build()
	File_auth_v1_auth_proto = out.File
	file_auth_v1_auth_proto_goTypes = nil
	file_auth_v1_auth_proto_depIdxs = nil
}
